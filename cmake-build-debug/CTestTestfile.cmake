# CMake generated Testfile for 
# Source directory: /home/eraden/code/eraden/tsc
# Build directory: /home/eraden/code/eraden/tsc/cmake-build-debug
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
add_test(break_unexpected_token "./cts" "-f" "examples/break/unexpected_token")
set_tests_properties(break_unexpected_token PROPERTIES  WILL_FAIL "TRUE")
add_test(break_valid_ts "./cts" "-f" "examples/break/valid.ts")
add_test(case_body_unexpected_end_of_stream "./cts" "-f" "examples/case/body/unexpected_end_of_stream")
set_tests_properties(case_body_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(case_conditions_unexpected_end_of_stream "./cts" "-f" "examples/case/conditions/unexpected_end_of_stream")
set_tests_properties(case_conditions_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(case_conditions_unexpected_token "./cts" "-f" "examples/case/conditions/unexpected_token")
set_tests_properties(case_conditions_unexpected_token PROPERTIES  WILL_FAIL "TRUE")
add_test(case_valid_ts "./cts" "-f" "examples/case/valid.ts")
add_test(class_class_with_multiple_fields_ts "./cts" "-f" "examples/class/class_with_multiple_fields.ts")
add_test(class_class_with_multiple_methods_ts "./cts" "-f" "examples/class/class_with_multiple_methods.ts")
add_test(class_invalid_class_name "./cts" "-f" "examples/class/invalid_class_name")
set_tests_properties(class_invalid_class_name PROPERTIES  WILL_FAIL "TRUE")
add_test(class_missing_class_ending "./cts" "-f" "examples/class/missing_class_ending")
set_tests_properties(class_missing_class_ending PROPERTIES  WILL_FAIL "TRUE")
add_test(class_missing_class_name "./cts" "-f" "examples/class/missing_class_name")
set_tests_properties(class_missing_class_name PROPERTIES  WILL_FAIL "TRUE")
add_test(class_multiple_super_class "./cts" "-f" "examples/class/multiple_super_class")
set_tests_properties(class_multiple_super_class PROPERTIES  WILL_FAIL "TRUE")
add_test(class_valid_ts "./cts" "-f" "examples/class/valid.ts")
add_test(cli_blank_ts "./cts" "-f" "examples/cli/blank.ts")
add_test(decorator_invalid_character "./cts" "-f" "examples/decorator/invalid_character")
set_tests_properties(decorator_invalid_character PROPERTIES  WILL_FAIL "TRUE")
add_test(decorator_missing_name "./cts" "-f" "examples/decorator/missing_name")
set_tests_properties(decorator_missing_name PROPERTIES  WILL_FAIL "TRUE")
add_test(decorator_unexpected_end_of_stream "./cts" "-f" "examples/decorator/unexpected_end_of_stream")
set_tests_properties(decorator_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(decorator_unexpected_keyword "./cts" "-f" "examples/decorator/unexpected_keyword")
set_tests_properties(decorator_unexpected_keyword PROPERTIES  WILL_FAIL "TRUE")
add_test(decorator_valid_ts "./cts" "-f" "examples/decorator/valid.ts")
add_test(do_valid_ts "./cts" "-f" "examples/do/valid.ts")
add_test(else_no_ending_bracket "./cts" "-f" "examples/else/no_ending_bracket")
set_tests_properties(else_no_ending_bracket PROPERTIES  WILL_FAIL "TRUE")
add_test(else_no_if "./cts" "-f" "examples/else/no_if")
set_tests_properties(else_no_if PROPERTIES  WILL_FAIL "TRUE")
add_test(else_valid_ts "./cts" "-f" "examples/else/valid.ts")
add_test(export_unexpected_end_of_stream "./cts" "-f" "examples/export/input/unexpected_end_of_stream")
set_tests_properties(export_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(export_unexpected_new_line "./cts" "-f" "examples/export/input/unexpected_new_line")
set_tests_properties(export_unexpected_new_line PROPERTIES  WILL_FAIL "TRUE")
add_test(export_valid_ts "./cts" "-f" "examples/export/input/valid.ts")
add_test(extends_valid_ts "./cts" "-f" "examples/extends/valid.ts")
add_test(for_in_unexpected_end_of_stream "./cts" "-f" "examples/for/in/unexpected_end_of_stream")
set_tests_properties(for_in_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(for_in_valid_ts "./cts" "-f" "examples/for/in/valid.ts")
add_test(for_let_unexpected_end_of_stream "./cts" "-f" "examples/for/let/unexpected_end_of_stream")
set_tests_properties(for_let_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(for_let_valid_ts "./cts" "-f" "examples/for/let/valid.ts")
add_test(for_of_unexpected_end_of_stream "./cts" "-f" "examples/for/of/unexpected_end_of_stream")
set_tests_properties(for_of_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(for_of_valid_ts "./cts" "-f" "examples/for/of/valid.ts")
add_test(functions_invalid_return_type "./cts" "-f" "examples/functions/invalid_return_type")
set_tests_properties(functions_invalid_return_type PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_invalid_return_type_name "./cts" "-f" "examples/functions/invalid_return_type_name")
set_tests_properties(functions_invalid_return_type_name PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_missing_arg_name "./cts" "-f" "examples/functions/missing_arg_name")
set_tests_properties(functions_missing_arg_name PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_missing_arg_type "./cts" "-f" "examples/functions/missing_arg_type")
set_tests_properties(functions_missing_arg_type PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_missing_arg_value "./cts" "-f" "examples/functions/missing_arg_value")
set_tests_properties(functions_missing_arg_value PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_missing_first_arg_name "./cts" "-f" "examples/functions/missing_first_arg_name")
set_tests_properties(functions_missing_first_arg_name PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_missing_return_type "./cts" "-f" "examples/functions/missing_return_type")
set_tests_properties(functions_missing_return_type PROPERTIES  WILL_FAIL "TRUE")
add_test(functions_valid_ts "./cts" "-f" "examples/functions/valid.ts")
add_test(if_no_args "./cts" "-f" "examples/if/input/no_args")
set_tests_properties(if_no_args PROPERTIES  WILL_FAIL "TRUE")
add_test(if_no_ending_bracket "./cts" "-f" "examples/if/input/no_ending_bracket")
set_tests_properties(if_no_ending_bracket PROPERTIES  WILL_FAIL "TRUE")
add_test(if_valid_ts "./cts" "-f" "examples/if/input/valid.ts")
add_test(implements_valid_ts "./cts" "-f" "examples/implements/valid.ts")
add_test(import_go_up_valid_ts "./cts" "-f" "examples/import/go_up/valid.ts")
add_test(import_source_ts "./cts" "-f" "examples/import/source.ts")
add_test(import_valid_ts "./cts" "-f" "examples/import/valid.ts")
add_test(inline_comment_valid_ts "./cts" "-f" "examples/inline_comment/valid.ts")
add_test(interface_valid_ts "./cts" "-f" "examples/interface/valid.ts")
add_test(json_valid_ts "./cts" "-f" "examples/json/valid.ts")
add_test(multiline_comment_missing_ending "./cts" "-f" "examples/multiline_comment/missing_ending")
set_tests_properties(multiline_comment_missing_ending PROPERTIES  WILL_FAIL "TRUE")
add_test(multiline_comment_valid_ts "./cts" "-f" "examples/multiline_comment/valid.ts")
add_test(namespace_valid_ts "./cts" "-f" "examples/namespace/valid.ts")
add_test(new_unexpected_colon "./cts" "-f" "examples/new/unexpected_colon")
set_tests_properties(new_unexpected_colon PROPERTIES  WILL_FAIL "TRUE")
add_test(new_unexpected_end_of_stream "./cts" "-f" "examples/new/unexpected_end_of_stream")
set_tests_properties(new_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(new_unexpected_new_line "./cts" "-f" "examples/new/unexpected_new_line")
set_tests_properties(new_unexpected_new_line PROPERTIES  WILL_FAIL "TRUE")
add_test(new_valid_ts "./cts" "-f" "examples/new/valid.ts")
add_test(operators_valid_ts "./cts" "-f" "examples/operators/valid.ts")
add_test(return_valid_ts "./cts" "-f" "examples/return/valid.ts")
add_test(return_without_function "./cts" "-f" "examples/return/without_function")
set_tests_properties(return_without_function PROPERTIES  WILL_FAIL "TRUE")
add_test(scope_valid_ts "./cts" "-f" "examples/scope/valid.ts")
add_test(spread_valid_ts "./cts" "-f" "examples/spread/input/valid.ts")
add_test(super_valid_ts "./cts" "-f" "examples/super/input/valid.ts")
add_test(switch_body_unexpected_end_of_stream "./cts" "-f" "examples/switch/body/unexpected_end_of_stream")
set_tests_properties(switch_body_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_body_unexpected_token "./cts" "-f" "examples/switch/body/unexpected_token")
set_tests_properties(switch_body_unexpected_token PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_conditions_unexpected_end_of_stream "./cts" "-f" "examples/switch/conditions/unexpected_end_of_stream")
set_tests_properties(switch_conditions_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_conditions_unexpected_token "./cts" "-f" "examples/switch/conditions/unexpected_token")
set_tests_properties(switch_conditions_unexpected_token PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_head_unexpected_end_of_stream "./cts" "-f" "examples/switch/head/unexpected_end_of_stream")
set_tests_properties(switch_head_unexpected_end_of_stream PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_head_unexpected_token "./cts" "-f" "examples/switch/head/unexpected_token")
set_tests_properties(switch_head_unexpected_token PROPERTIES  WILL_FAIL "TRUE")
add_test(switch_valid_ts "./cts" "-f" "examples/switch/valid.ts")
add_test(test_ts "./cts" "-f" "examples/test.ts")
add_test(type_validation_ts "./cts" "-f" "examples/type_validation.ts")
add_test(unicode_ts "./cts" "-f" "examples/unicode.ts")
add_test(variables_const_name_reserved_word "./cts" "-f" "examples/variables/const_name_reserved_word")
set_tests_properties(variables_const_name_reserved_word PROPERTIES  WILL_FAIL "TRUE")
add_test(variables_let_name_reserved_word "./cts" "-f" "examples/variables/let_name_reserved_word")
set_tests_properties(variables_let_name_reserved_word PROPERTIES  WILL_FAIL "TRUE")
add_test(variables_missing_type "./cts" "-f" "examples/variables/missing_type")
set_tests_properties(variables_missing_type PROPERTIES  WILL_FAIL "TRUE")
add_test(variables_missing_value "./cts" "-f" "examples/variables/missing_value")
set_tests_properties(variables_missing_value PROPERTIES  WILL_FAIL "TRUE")
add_test(variables_no_name "./cts" "-f" "examples/variables/no_name")
set_tests_properties(variables_no_name PROPERTIES  WILL_FAIL "TRUE")
add_test(variables_valid_ts "./cts" "-f" "examples/variables/valid.ts")
add_test(variables_var_name_reserved_word "./cts" "-f" "examples/variables/var_name_reserved_word")
set_tests_properties(variables_var_name_reserved_word PROPERTIES  WILL_FAIL "TRUE")
add_test(while_valid_ts "./cts" "-f" "examples/while/valid.ts")
add_test(CheckTsc "./cts_test")
