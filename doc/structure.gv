digraph for_children {
  resolution=300.0;
  center=1;
  splines=polyline;

  subgraph borrows {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 1;

    TS_BORROW [ margin=0.3 page=1 pos="0.0,0.5" ];
  }

  subgraph variables {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 2;

    TS_LOCAL_VARIABLE [ label="((local variable))" margin=0.3 ];

    TS_LOCAL_VARIABLE -> TS_CONST [ arrowhead="dot" ];
    TS_LOCAL_VARIABLE -> TS_LET [ arrowhead="dot" ];
    TS_LOCAL_VARIABLE -> TS_VAR [ arrowhead="dot" ];
    TS_LOCAL_VARIABLE -> TS_BORROW [ dir=both ];

    TS_CONST -> TS_BORROW [ constraint=false ];
    TS_LET -> TS_BORROW [ constraint=false ];
    TS_VAR -> TS_BORROW [ constraint=false ];

    TS_CONST_NOT_ALLOWED [ label = "const not allowed" shape = box constraint = false ];

    subgraph variables_entries {
      pack = true;
      packMode = clust;
      page = 3;

      TS_LOCAL_VARIABLE_TYPE [ label="(( type [index 0] ))" ];
      TS_LOCAL_VARIABLE_VALUE [ label="(( value [index 1] ))" arrowhead="dot" ];
    }

    TS_LET -> { TS_LOCAL_VARIABLE_TYPE, TS_LOCAL_VARIABLE_VALUE } [ arrowhead="dot" constraint = true ];
    TS_VAR -> { TS_LOCAL_VARIABLE_TYPE, TS_LOCAL_VARIABLE_VALUE } [ arrowhead="dot" constraint = true ];
    TS_CONST -> { TS_LOCAL_VARIABLE_TYPE, TS_LOCAL_VARIABLE_VALUE } [ arrowhead="dot" constraint = true ];

    TS_LOCAL_VARIABLE_TYPE -> { TS_BORROW, TS_NUMBER } [ constraint=false ];
  }

  subgraph conditions {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 5;

    TS_CONDITION -> { TS_BORROW, TS_GROUP, TS_NUMBER } [ constraint = false ];
  }


  subgraph global {
    pack = true;
    packMode = clust;
    center=1;
    pad=2.0;
    page = 6;

    TS_GLOBAL_SCOPE [ label="((global scope))" pad=1.3 margin=0.3 page=1 root=true ];

    subgraph global_only {
      pack = true;
      packMode = clust;
      pad=2.0;
      page = 7;

      TS_IMPORT -> TS_BORROW [ constraint=false ];
      TS_EXPORT -> TS_BORROW [ constraint=false ];
      TS_IMPORT -> TS_FILE [ constraint=true arrowhead=dot ];

      TS_GLOBAL_SCOPE -> { TS_EXPORT, TS_IMPORT } [ constraint=true ];
    }
  }

  subgraph scope {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 8;

    TS_SCOPE [ margin=0.3 ];

    TS_SCOPE -> { TS_SCOPE } [ constraint = true dir = both ];
    TS_SCOPE -> { TS_SEMICOLON } [ constraint = false ];
    TS_GLOBAL_SCOPE -> { TS_SCOPE } [ constraint = false ];
  }

  subgraph operators {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 4;

    TS_OPERATOR [ pag=2.0 page=3 ];

    TS_OPERATOR -> { TS_NUMBER, TS_NUMBER } [ constraint = false ];
    TS_DOT -> { TS_BORROW, TS_NUMBER } [ constraint = false ];
    TS_IN -> { TS_BORROW, TS_DOT } [ constraint = false ];
    TS_OF -> { TS_BORROW, TS_DOT } [ constraint = false ];

    TS_SCOPE -> { TS_OPERATOR } [ constraint = false ];
    TS_GLOBAL_SCOPE -> { TS_OPERATOR } [ constraint = false ];
  }

  subgraph functions {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 9;

    TS_FUNCTION -> TS_CALL_ARGUMENTS;
    TS_FUNCTION -> TS_SCOPE [ dir="both" ];

    TS_SCOPE -> { TS_FUNCTION } [ constraint = false ];
    TS_GLOBAL_SCOPE -> { TS_FUNCTION } [ constraint = false ];
  }

  subgraph flow_control {
    pack = true;
    packMode = clust;
    pad = 2.0;
    page = 10;

    TS_FLOW_CONTROL [ label = "((flow control))" margin = 0.3 ];
    TS_GLOBAL_SCOPE -> TS_FLOW_CONTROL [ constraint = false ];
    TS_SCOPE -> TS_FLOW_CONTROL [ constraint = false ];

    subgraph if {
      pack = true;
      packMode = clust;
      pad = 2.0;
      page = 101;

      TS_FLOW_CONTROL -> TS_IF [ constraint = true ];

      TS_IF -> { TS_CONDITION, TS_SCOPE } [ constraint = false ];
      TS_IF -> TS_ELSE [ constraint = true ];
    }

    subgraph switch {
      pack = true;
      packMode = clust;
      pad=2.0;
      page = 102;

      TS_FLOW_CONTROL -> TS_SWITCH [ constraint = true ];

      TS_SWITCH -> TS_CONDITION [ constraint = false ];
      TS_SWITCH -> TS_SWITCH_BODY [ constraint = true ];

      TS_SWITCH_BODY -> { TS_CASE, TS_DEFAULT } [ constraint = true ];
      TS_CASE -> TS_SCOPE [ constraint = false ];
      TS_CASE -> TS_CONDITION [ constraint = true ];
      TS_DEFAULT -> TS_SCOPE [ constraint=false ];
    }
  }

  subgraph types {
    pack = true;
    packMode = clust;
    pad=2.0;
    page = 12;

    TS_TYPES [ label = "((types))" margin=0.3 ]
      TS_TYPES -> { TS_CLASS, TS_INTERFACE } [ constraint = true ];
    TS_BORROW -> TS_TYPES [ constraint = false ];
    TS_GLOBAL_SCOPE -> TS_TYPES [ constraint = false ];

    TS_CLASS -> { TS_CLASS_METHOD, TS_CLASS_FIELD };

    TS_INTERFACE -> { TS_CLASS_FIELD, TS_CLASS_METHOD };

    TS_CLASS_METHOD -> { TS_CALL_ARGUMENTS, TS_SCOPE };
  }

  subgraph groups {
    pad=2.0;
    pack = true;
    packMode = clust;
    page = 13;

    TS_GROUP -> { TS_OPERATOR, TS_NUMBER, TS_BORROW } [ constraint = false ];
  }

  subgraph loops {
    pack = true;
    packMode = clust;
    center=1;
    pad=2.0;
    page = 14;

    TS_LOOPS [ label = "((loops))" margin = 0.3 ];

    TS_GLOBAL_SCOPE -> TS_LOOPS [ constraint = false ];
    TS_SCOPE -> TS_LOOPS [ constraint = false ];

    subgraph for {
      pack = true;
      packMode = clust;
      label="for";
      center=1;
      pad=2.0;
      page = 141;

      TS_FOR [ pad=5.0 page=6 ];

      TS_FOR_COLLECTION [ label="((multiple tokens))" margin = 0.3 ];

      TS_FOR -> TS_FOR_WITH_CONDITION [ arrowhead="dot" ];
      TS_FOR -> TS_FOR_IN [ arrowhead="dot" ];
      TS_FOR -> TS_FOR_OF [ arrowhead="dot" ];

      TS_LOOPS -> TS_FOR [ constraint=true ];

      subgraph for_with_condition {
        TS_FOR_WITH_CONDITION -> TS_LOOP_VARIABLES_SECTION;
        TS_FOR_WITH_CONDITION -> TS_LOOP_CONDITION_SECTION;
        TS_FOR_WITH_CONDITION -> TS_LOOP_CHANGE_SECTION;
      }

      subgraph for_in {
        TS_FOR_IN -> TS_LOOP_VARIABLES_SECTION;
        TS_FOR_IN -> TS_IN;
        TS_FOR_IN -> TS_FOR_COLLECTION;
      }

      subgraph for_of {
        TS_FOR_OF -> TS_LOOP_VARIABLES_SECTION;
        TS_FOR_OF -> TS_OF;
        TS_FOR_OF -> TS_FOR_COLLECTION;
      }

      TS_LOOP_VARIABLES_SECTION -> TS_LOCAL_VARIABLE;
      TS_LOOP_VARIABLES_SECTION -> TS_CONST_NOT_ALLOWED;

      TS_LOOP_CONDITION_SECTION -> TS_CONDITION;
      TS_LOOP_CHANGE_SECTION -> TS_BORROW;
      TS_LOOP_CHANGE_SECTION -> TS_OPERATOR;
    }

  }
}
